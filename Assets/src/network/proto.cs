// Generated by sprotodump. DO NOT EDIT!
// source: proto.lua

using System;
using Sproto;
using System.Collections.Generic;

namespace protoType{ 
	public class changescene : SprotoTypeBase {
		private static int max_field_count = 1;
		
		public class request : SprotoTypeBase {
			private static int max_field_count = 1;
			
			
			private Int64 _sceneid; // tag 0
			public Int64 sceneid {
				get { return _sceneid; }
				set { base.has_field.set_field (0, true); _sceneid = value; }
			}

			public request () : base(max_field_count) {}

			public request (byte[] buffer) : base(max_field_count, buffer) {
				this.decode ();
			}

			protected override void decode () {
				int tag = -1;
				while (-1 != (tag = base.deserialize.read_tag ())) {
					switch (tag) {
					case 0:
						this.sceneid = base.deserialize.read_integer ();
						break;
					default:
						base.deserialize.read_unknow_data ();
						break;
					}
				}
			}

			public override int encode (SprotoStream stream) {
				base.serialize.open (stream);

				if (base.has_field.has_field (0)) {
					base.serialize.write_integer (this.sceneid, 0);
				}

				return base.serialize.close ();
			}
		}


		public class response : SprotoTypeBase {
			private static int max_field_count = 1;
			
			
			private bool _ok; // tag 0
			public bool ok {
				get { return _ok; }
				set { base.has_field.set_field (0, true); _ok = value; }
			}

			public response () : base(max_field_count) {}

			public response (byte[] buffer) : base(max_field_count, buffer) {
				this.decode ();
			}

			protected override void decode () {
				int tag = -1;
				while (-1 != (tag = base.deserialize.read_tag ())) {
					switch (tag) {
					case 0:
						this.ok = base.deserialize.read_boolean ();
						break;
					default:
						base.deserialize.read_unknow_data ();
						break;
					}
				}
			}

			public override int encode (SprotoStream stream) {
				base.serialize.open (stream);

				if (base.has_field.has_field (0)) {
					base.serialize.write_boolean (this.ok, 0);
				}

				return base.serialize.close ();
			}
		}


		
		private Int64 _sceneid; // tag 0
		public Int64 sceneid {
			get { return _sceneid; }
			set { base.has_field.set_field (0, true); _sceneid = value; }
		}

		public changescene () : base(max_field_count) {}

		public changescene (byte[] buffer) : base(max_field_count, buffer) {
			this.decode ();
		}

		protected override void decode () {
			int tag = -1;
			while (-1 != (tag = base.deserialize.read_tag ())) {
				switch (tag) {
				case 0:
					this.sceneid = base.deserialize.read_integer ();
					break;
				default:
					base.deserialize.read_unknow_data ();
					break;
				}
			}
		}

		public override int encode (SprotoStream stream) {
			base.serialize.open (stream);

			if (base.has_field.has_field (0)) {
				base.serialize.write_integer (this.sceneid, 0);
			}

			return base.serialize.close ();
		}
	}


	public class createaccount : SprotoTypeBase {
		private static int max_field_count = 3;
		
		public class request : SprotoTypeBase {
			private static int max_field_count = 3;
			
			
			private string _username; // tag 0
			public string username {
				get { return _username; }
				set { base.has_field.set_field (0, true); _username = value; }
			}

			private string _password; // tag 1
			public string password {
				get { return _password; }
				set { base.has_field.set_field (1, true); _password = value; }
			}

			public request () : base(max_field_count) {}

			public request (byte[] buffer) : base(max_field_count, buffer) {
				this.decode ();
			}

			protected override void decode () {
				int tag = -1;
				while (-1 != (tag = base.deserialize.read_tag ())) {
					switch (tag) {
					case 0:
						this.username = base.deserialize.read_string ();
						break;
					case 1:
						this.password = base.deserialize.read_string ();
						break;
					default:
						base.deserialize.read_unknow_data ();
						break;
					}
				}
			}

			public override int encode (SprotoStream stream) {
				base.serialize.open (stream);

				if (base.has_field.has_field (0)) {
					base.serialize.write_string (this.username, 0);
				}

				if (base.has_field.has_field (1)) {
					base.serialize.write_string (this.password, 1);
				}

				return base.serialize.close ();
			}
		}


		public class response : SprotoTypeBase {
			private static int max_field_count = 1;
			
			
			private bool _ok; // tag 0
			public bool ok {
				get { return _ok; }
				set { base.has_field.set_field (0, true); _ok = value; }
			}

			public response () : base(max_field_count) {}

			public response (byte[] buffer) : base(max_field_count, buffer) {
				this.decode ();
			}

			protected override void decode () {
				int tag = -1;
				while (-1 != (tag = base.deserialize.read_tag ())) {
					switch (tag) {
					case 0:
						this.ok = base.deserialize.read_boolean ();
						break;
					default:
						base.deserialize.read_unknow_data ();
						break;
					}
				}
			}

			public override int encode (SprotoStream stream) {
				base.serialize.open (stream);

				if (base.has_field.has_field (0)) {
					base.serialize.write_boolean (this.ok, 0);
				}

				return base.serialize.close ();
			}
		}


		
		private string _username; // tag 0
		public string username {
			get { return _username; }
			set { base.has_field.set_field (0, true); _username = value; }
		}

		private string _password; // tag 1
		public string password {
			get { return _password; }
			set { base.has_field.set_field (1, true); _password = value; }
		}

		public createaccount () : base(max_field_count) {}

		public createaccount (byte[] buffer) : base(max_field_count, buffer) {
			this.decode ();
		}

		protected override void decode () {
			int tag = -1;
			while (-1 != (tag = base.deserialize.read_tag ())) {
				switch (tag) {
				case 0:
					this.username = base.deserialize.read_string ();
					break;
				case 1:
					this.password = base.deserialize.read_string ();
					break;
				default:
					base.deserialize.read_unknow_data ();
					break;
				}
			}
		}

		public override int encode (SprotoStream stream) {
			base.serialize.open (stream);

			if (base.has_field.has_field (0)) {
				base.serialize.write_string (this.username, 0);
			}

			if (base.has_field.has_field (1)) {
				base.serialize.write_string (this.password, 1);
			}

			return base.serialize.close ();
		}
	}


	public class createplayer : SprotoTypeBase {
		private static int max_field_count = 3;
		
		public class request : SprotoTypeBase {
			private static int max_field_count = 3;
			
			
			private string _username; // tag 0
			public string username {
				get { return _username; }
				set { base.has_field.set_field (0, true); _username = value; }
			}

			private Int64 _job; // tag 1
			public Int64 job {
				get { return _job; }
				set { base.has_field.set_field (1, true); _job = value; }
			}

			public request () : base(max_field_count) {}

			public request (byte[] buffer) : base(max_field_count, buffer) {
				this.decode ();
			}

			protected override void decode () {
				int tag = -1;
				while (-1 != (tag = base.deserialize.read_tag ())) {
					switch (tag) {
					case 0:
						this.username = base.deserialize.read_string ();
						break;
					case 1:
						this.job = base.deserialize.read_integer ();
						break;
					default:
						base.deserialize.read_unknow_data ();
						break;
					}
				}
			}

			public override int encode (SprotoStream stream) {
				base.serialize.open (stream);

				if (base.has_field.has_field (0)) {
					base.serialize.write_string (this.username, 0);
				}

				if (base.has_field.has_field (1)) {
					base.serialize.write_integer (this.job, 1);
				}

				return base.serialize.close ();
			}
		}


		public class response : SprotoTypeBase {
			private static int max_field_count = 1;
			
			
			private Int64 _id; // tag 0
			public Int64 id {
				get { return _id; }
				set { base.has_field.set_field (0, true); _id = value; }
			}

			public response () : base(max_field_count) {}

			public response (byte[] buffer) : base(max_field_count, buffer) {
				this.decode ();
			}

			protected override void decode () {
				int tag = -1;
				while (-1 != (tag = base.deserialize.read_tag ())) {
					switch (tag) {
					case 0:
						this.id = base.deserialize.read_integer ();
						break;
					default:
						base.deserialize.read_unknow_data ();
						break;
					}
				}
			}

			public override int encode (SprotoStream stream) {
				base.serialize.open (stream);

				if (base.has_field.has_field (0)) {
					base.serialize.write_integer (this.id, 0);
				}

				return base.serialize.close ();
			}
		}


		
		private string _username; // tag 0
		public string username {
			get { return _username; }
			set { base.has_field.set_field (0, true); _username = value; }
		}

		private Int64 _job; // tag 1
		public Int64 job {
			get { return _job; }
			set { base.has_field.set_field (1, true); _job = value; }
		}

		public createplayer () : base(max_field_count) {}

		public createplayer (byte[] buffer) : base(max_field_count, buffer) {
			this.decode ();
		}

		protected override void decode () {
			int tag = -1;
			while (-1 != (tag = base.deserialize.read_tag ())) {
				switch (tag) {
				case 0:
					this.username = base.deserialize.read_string ();
					break;
				case 1:
					this.job = base.deserialize.read_integer ();
					break;
				default:
					base.deserialize.read_unknow_data ();
					break;
				}
			}
		}

		public override int encode (SprotoStream stream) {
			base.serialize.open (stream);

			if (base.has_field.has_field (0)) {
				base.serialize.write_string (this.username, 0);
			}

			if (base.has_field.has_field (1)) {
				base.serialize.write_integer (this.job, 1);
			}

			return base.serialize.close ();
		}
	}


	public class drop : SprotoTypeBase {
		private static int max_field_count = 5;
		
		public class request : SprotoTypeBase {
			private static int max_field_count = 5;
			
			
			private Int64 _exp; // tag 0
			public Int64 exp {
				get { return _exp; }
				set { base.has_field.set_field (0, true); _exp = value; }
			}

			private Int64 _gold; // tag 1
			public Int64 gold {
				get { return _gold; }
				set { base.has_field.set_field (1, true); _gold = value; }
			}

			private List<titem> _items; // tag 2
			public List<titem> items {
				get { return _items; }
				set { base.has_field.set_field (2, true); _items = value; }
			}

			public request () : base(max_field_count) {}

			public request (byte[] buffer) : base(max_field_count, buffer) {
				this.decode ();
			}

			protected override void decode () {
				int tag = -1;
				while (-1 != (tag = base.deserialize.read_tag ())) {
					switch (tag) {
					case 0:
						this.exp = base.deserialize.read_integer ();
						break;
					case 1:
						this.gold = base.deserialize.read_integer ();
						break;
					case 2:
						this.items = base.deserialize.read_obj_list<titem> ();
						break;
					default:
						base.deserialize.read_unknow_data ();
						break;
					}
				}
			}

			public override int encode (SprotoStream stream) {
				base.serialize.open (stream);

				if (base.has_field.has_field (0)) {
					base.serialize.write_integer (this.exp, 0);
				}

				if (base.has_field.has_field (1)) {
					base.serialize.write_integer (this.gold, 1);
				}

				if (base.has_field.has_field (2)) {
					base.serialize.write_obj (this.items, 2);
				}

				return base.serialize.close ();
			}
		}


		
		private Int64 _exp; // tag 0
		public Int64 exp {
			get { return _exp; }
			set { base.has_field.set_field (0, true); _exp = value; }
		}

		private Int64 _gold; // tag 1
		public Int64 gold {
			get { return _gold; }
			set { base.has_field.set_field (1, true); _gold = value; }
		}

		private List<titem> _items; // tag 2
		public List<titem> items {
			get { return _items; }
			set { base.has_field.set_field (2, true); _items = value; }
		}

		public drop () : base(max_field_count) {}

		public drop (byte[] buffer) : base(max_field_count, buffer) {
			this.decode ();
		}

		protected override void decode () {
			int tag = -1;
			while (-1 != (tag = base.deserialize.read_tag ())) {
				switch (tag) {
				case 0:
					this.exp = base.deserialize.read_integer ();
					break;
				case 1:
					this.gold = base.deserialize.read_integer ();
					break;
				case 2:
					this.items = base.deserialize.read_obj_list<titem> ();
					break;
				default:
					base.deserialize.read_unknow_data ();
					break;
				}
			}
		}

		public override int encode (SprotoStream stream) {
			base.serialize.open (stream);

			if (base.has_field.has_field (0)) {
				base.serialize.write_integer (this.exp, 0);
			}

			if (base.has_field.has_field (1)) {
				base.serialize.write_integer (this.gold, 1);
			}

			if (base.has_field.has_field (2)) {
				base.serialize.write_obj (this.items, 2);
			}

			return base.serialize.close ();
		}
	}


	public class getfightround : SprotoTypeBase {
		private static int max_field_count = 1;
		
		public class request : SprotoTypeBase {
			private static int max_field_count = 1;
			
			
			private Int64 _id; // tag 0
			public Int64 id {
				get { return _id; }
				set { base.has_field.set_field (0, true); _id = value; }
			}

			public request () : base(max_field_count) {}

			public request (byte[] buffer) : base(max_field_count, buffer) {
				this.decode ();
			}

			protected override void decode () {
				int tag = -1;
				while (-1 != (tag = base.deserialize.read_tag ())) {
					switch (tag) {
					case 0:
						this.id = base.deserialize.read_integer ();
						break;
					default:
						base.deserialize.read_unknow_data ();
						break;
					}
				}
			}

			public override int encode (SprotoStream stream) {
				base.serialize.open (stream);

				if (base.has_field.has_field (0)) {
					base.serialize.write_integer (this.id, 0);
				}

				return base.serialize.close ();
			}
		}


		public class response : SprotoTypeBase {
			private static int max_field_count = 3;
			
			
			private List<tmonster> _monster; // tag 0
			public List<tmonster> monster {
				get { return _monster; }
				set { base.has_field.set_field (0, true); _monster = value; }
			}

			private List<tdamageflow> _damageflow; // tag 1
			public List<tdamageflow> damageflow {
				get { return _damageflow; }
				set { base.has_field.set_field (1, true); _damageflow = value; }
			}

			public response () : base(max_field_count) {}

			public response (byte[] buffer) : base(max_field_count, buffer) {
				this.decode ();
			}

			protected override void decode () {
				int tag = -1;
				while (-1 != (tag = base.deserialize.read_tag ())) {
					switch (tag) {
					case 0:
						this.monster = base.deserialize.read_obj_list<tmonster> ();
						break;
					case 1:
						this.damageflow = base.deserialize.read_obj_list<tdamageflow> ();
						break;
					default:
						base.deserialize.read_unknow_data ();
						break;
					}
				}
			}

			public override int encode (SprotoStream stream) {
				base.serialize.open (stream);

				if (base.has_field.has_field (0)) {
					base.serialize.write_obj (this.monster, 0);
				}

				if (base.has_field.has_field (1)) {
					base.serialize.write_obj (this.damageflow, 1);
				}

				return base.serialize.close ();
			}
		}


		
		private Int64 _id; // tag 0
		public Int64 id {
			get { return _id; }
			set { base.has_field.set_field (0, true); _id = value; }
		}

		public getfightround () : base(max_field_count) {}

		public getfightround (byte[] buffer) : base(max_field_count, buffer) {
			this.decode ();
		}

		protected override void decode () {
			int tag = -1;
			while (-1 != (tag = base.deserialize.read_tag ())) {
				switch (tag) {
				case 0:
					this.id = base.deserialize.read_integer ();
					break;
				default:
					base.deserialize.read_unknow_data ();
					break;
				}
			}
		}

		public override int encode (SprotoStream stream) {
			base.serialize.open (stream);

			if (base.has_field.has_field (0)) {
				base.serialize.write_integer (this.id, 0);
			}

			return base.serialize.close ();
		}
	}


	public class getplayerinfo : SprotoTypeBase {
		private static int max_field_count = 0;
		
		public class request : SprotoTypeBase {
			private static int max_field_count = 0;
			
			
			public request () : base(max_field_count) {}

			public request (byte[] buffer) : base(max_field_count, buffer) {
				this.decode ();
			}

			protected override void decode () {
				int tag = -1;
				while (-1 != (tag = base.deserialize.read_tag ())) {
					switch (tag) {
					default:
						base.deserialize.read_unknow_data ();
						break;
					}
				}
			}

			public override int encode (SprotoStream stream) {
				base.serialize.open (stream);

				return base.serialize.close ();
			}
		}


		public class response : SprotoTypeBase {
			private static int max_field_count = 3;
			
			
			private bool _ok; // tag 0
			public bool ok {
				get { return _ok; }
				set { base.has_field.set_field (0, true); _ok = value; }
			}

			private tplayer _player; // tag 1
			public tplayer player {
				get { return _player; }
				set { base.has_field.set_field (1, true); _player = value; }
			}

			public response () : base(max_field_count) {}

			public response (byte[] buffer) : base(max_field_count, buffer) {
				this.decode ();
			}

			protected override void decode () {
				int tag = -1;
				while (-1 != (tag = base.deserialize.read_tag ())) {
					switch (tag) {
					case 0:
						this.ok = base.deserialize.read_boolean ();
						break;
					case 1:
						this.player = base.deserialize.read_obj<tplayer> ();
						break;
					default:
						base.deserialize.read_unknow_data ();
						break;
					}
				}
			}

			public override int encode (SprotoStream stream) {
				base.serialize.open (stream);

				if (base.has_field.has_field (0)) {
					base.serialize.write_boolean (this.ok, 0);
				}

				if (base.has_field.has_field (1)) {
					base.serialize.write_obj (this.player, 1);
				}

				return base.serialize.close ();
			}
		}


		
		public getplayerinfo () : base(max_field_count) {}

		public getplayerinfo (byte[] buffer) : base(max_field_count, buffer) {
			this.decode ();
		}

		protected override void decode () {
			int tag = -1;
			while (-1 != (tag = base.deserialize.read_tag ())) {
				switch (tag) {
				default:
					base.deserialize.read_unknow_data ();
					break;
				}
			}
		}

		public override int encode (SprotoStream stream) {
			base.serialize.open (stream);

			return base.serialize.close ();
		}
	}


	public class login : SprotoTypeBase {
		private static int max_field_count = 3;
		
		public class request : SprotoTypeBase {
			private static int max_field_count = 3;
			
			
			private string _username; // tag 0
			public string username {
				get { return _username; }
				set { base.has_field.set_field (0, true); _username = value; }
			}

			private string _password; // tag 1
			public string password {
				get { return _password; }
				set { base.has_field.set_field (1, true); _password = value; }
			}

			public request () : base(max_field_count) {}

			public request (byte[] buffer) : base(max_field_count, buffer) {
				this.decode ();
			}

			protected override void decode () {
				int tag = -1;
				while (-1 != (tag = base.deserialize.read_tag ())) {
					switch (tag) {
					case 0:
						this.username = base.deserialize.read_string ();
						break;
					case 1:
						this.password = base.deserialize.read_string ();
						break;
					default:
						base.deserialize.read_unknow_data ();
						break;
					}
				}
			}

			public override int encode (SprotoStream stream) {
				base.serialize.open (stream);

				if (base.has_field.has_field (0)) {
					base.serialize.write_string (this.username, 0);
				}

				if (base.has_field.has_field (1)) {
					base.serialize.write_string (this.password, 1);
				}

				return base.serialize.close ();
			}
		}


		public class response : SprotoTypeBase {
			private static int max_field_count = 1;
			
			
			private bool _ok; // tag 0
			public bool ok {
				get { return _ok; }
				set { base.has_field.set_field (0, true); _ok = value; }
			}

			public response () : base(max_field_count) {}

			public response (byte[] buffer) : base(max_field_count, buffer) {
				this.decode ();
			}

			protected override void decode () {
				int tag = -1;
				while (-1 != (tag = base.deserialize.read_tag ())) {
					switch (tag) {
					case 0:
						this.ok = base.deserialize.read_boolean ();
						break;
					default:
						base.deserialize.read_unknow_data ();
						break;
					}
				}
			}

			public override int encode (SprotoStream stream) {
				base.serialize.open (stream);

				if (base.has_field.has_field (0)) {
					base.serialize.write_boolean (this.ok, 0);
				}

				return base.serialize.close ();
			}
		}


		
		private string _username; // tag 0
		public string username {
			get { return _username; }
			set { base.has_field.set_field (0, true); _username = value; }
		}

		private string _password; // tag 1
		public string password {
			get { return _password; }
			set { base.has_field.set_field (1, true); _password = value; }
		}

		public login () : base(max_field_count) {}

		public login (byte[] buffer) : base(max_field_count, buffer) {
			this.decode ();
		}

		protected override void decode () {
			int tag = -1;
			while (-1 != (tag = base.deserialize.read_tag ())) {
				switch (tag) {
				case 0:
					this.username = base.deserialize.read_string ();
					break;
				case 1:
					this.password = base.deserialize.read_string ();
					break;
				default:
					base.deserialize.read_unknow_data ();
					break;
				}
			}
		}

		public override int encode (SprotoStream stream) {
			base.serialize.open (stream);

			if (base.has_field.has_field (0)) {
				base.serialize.write_string (this.username, 0);
			}

			if (base.has_field.has_field (1)) {
				base.serialize.write_string (this.password, 1);
			}

			return base.serialize.close ();
		}
	}


	public class package : SprotoTypeBase {
		private static int max_field_count = 3;
		
		
		private Int64 _type; // tag 0
		public Int64 type {
			get { return _type; }
			set { base.has_field.set_field (0, true); _type = value; }
		}

		private Int64 _session; // tag 1
		public Int64 session {
			get { return _session; }
			set { base.has_field.set_field (1, true); _session = value; }
		}

		public package () : base(max_field_count) {}

		public package (byte[] buffer) : base(max_field_count, buffer) {
			this.decode ();
		}

		protected override void decode () {
			int tag = -1;
			while (-1 != (tag = base.deserialize.read_tag ())) {
				switch (tag) {
				case 0:
					this.type = base.deserialize.read_integer ();
					break;
				case 1:
					this.session = base.deserialize.read_integer ();
					break;
				default:
					base.deserialize.read_unknow_data ();
					break;
				}
			}
		}

		public override int encode (SprotoStream stream) {
			base.serialize.open (stream);

			if (base.has_field.has_field (0)) {
				base.serialize.write_integer (this.type, 0);
			}

			if (base.has_field.has_field (1)) {
				base.serialize.write_integer (this.session, 1);
			}

			return base.serialize.close ();
		}
	}


	public class sysmessage : SprotoTypeBase {
		private static int max_field_count = 1;
		
		public class request : SprotoTypeBase {
			private static int max_field_count = 1;
			
			
			private string _msg; // tag 0
			public string msg {
				get { return _msg; }
				set { base.has_field.set_field (0, true); _msg = value; }
			}

			public request () : base(max_field_count) {}

			public request (byte[] buffer) : base(max_field_count, buffer) {
				this.decode ();
			}

			protected override void decode () {
				int tag = -1;
				while (-1 != (tag = base.deserialize.read_tag ())) {
					switch (tag) {
					case 0:
						this.msg = base.deserialize.read_string ();
						break;
					default:
						base.deserialize.read_unknow_data ();
						break;
					}
				}
			}

			public override int encode (SprotoStream stream) {
				base.serialize.open (stream);

				if (base.has_field.has_field (0)) {
					base.serialize.write_string (this.msg, 0);
				}

				return base.serialize.close ();
			}
		}


		
		private string _msg; // tag 0
		public string msg {
			get { return _msg; }
			set { base.has_field.set_field (0, true); _msg = value; }
		}

		public sysmessage () : base(max_field_count) {}

		public sysmessage (byte[] buffer) : base(max_field_count, buffer) {
			this.decode ();
		}

		protected override void decode () {
			int tag = -1;
			while (-1 != (tag = base.deserialize.read_tag ())) {
				switch (tag) {
				case 0:
					this.msg = base.deserialize.read_string ();
					break;
				default:
					base.deserialize.read_unknow_data ();
					break;
				}
			}
		}

		public override int encode (SprotoStream stream) {
			base.serialize.open (stream);

			if (base.has_field.has_field (0)) {
				base.serialize.write_string (this.msg, 0);
			}

			return base.serialize.close ();
		}
	}


	public class tdamageflow : SprotoTypeBase {
		private static int max_field_count = 7;
		
		
		private Int64 _type; // tag 0
		public Int64 type {
			get { return _type; }
			set { base.has_field.set_field (0, true); _type = value; }
		}

		private Int64 _src; // tag 1
		public Int64 src {
			get { return _src; }
			set { base.has_field.set_field (1, true); _src = value; }
		}

		private Int64 _dest; // tag 2
		public Int64 dest {
			get { return _dest; }
			set { base.has_field.set_field (2, true); _dest = value; }
		}

		private Int64 _damage; // tag 3
		public Int64 damage {
			get { return _damage; }
			set { base.has_field.set_field (3, true); _damage = value; }
		}

		public tdamageflow () : base(max_field_count) {}

		public tdamageflow (byte[] buffer) : base(max_field_count, buffer) {
			this.decode ();
		}

		protected override void decode () {
			int tag = -1;
			while (-1 != (tag = base.deserialize.read_tag ())) {
				switch (tag) {
				case 0:
					this.type = base.deserialize.read_integer ();
					break;
				case 1:
					this.src = base.deserialize.read_integer ();
					break;
				case 2:
					this.dest = base.deserialize.read_integer ();
					break;
				case 3:
					this.damage = base.deserialize.read_integer ();
					break;
				default:
					base.deserialize.read_unknow_data ();
					break;
				}
			}
		}

		public override int encode (SprotoStream stream) {
			base.serialize.open (stream);

			if (base.has_field.has_field (0)) {
				base.serialize.write_integer (this.type, 0);
			}

			if (base.has_field.has_field (1)) {
				base.serialize.write_integer (this.src, 1);
			}

			if (base.has_field.has_field (2)) {
				base.serialize.write_integer (this.dest, 2);
			}

			if (base.has_field.has_field (3)) {
				base.serialize.write_integer (this.damage, 3);
			}

			return base.serialize.close ();
		}
	}


	public class titem : SprotoTypeBase {
		private static int max_field_count = 5;
		
		
		private Int64 _id; // tag 0
		public Int64 id {
			get { return _id; }
			set { base.has_field.set_field (0, true); _id = value; }
		}

		private string _name; // tag 1
		public string name {
			get { return _name; }
			set { base.has_field.set_field (1, true); _name = value; }
		}

		private Int64 _count; // tag 2
		public Int64 count {
			get { return _count; }
			set { base.has_field.set_field (2, true); _count = value; }
		}

		public titem () : base(max_field_count) {}

		public titem (byte[] buffer) : base(max_field_count, buffer) {
			this.decode ();
		}

		protected override void decode () {
			int tag = -1;
			while (-1 != (tag = base.deserialize.read_tag ())) {
				switch (tag) {
				case 0:
					this.id = base.deserialize.read_integer ();
					break;
				case 1:
					this.name = base.deserialize.read_string ();
					break;
				case 2:
					this.count = base.deserialize.read_integer ();
					break;
				default:
					base.deserialize.read_unknow_data ();
					break;
				}
			}
		}

		public override int encode (SprotoStream stream) {
			base.serialize.open (stream);

			if (base.has_field.has_field (0)) {
				base.serialize.write_integer (this.id, 0);
			}

			if (base.has_field.has_field (1)) {
				base.serialize.write_string (this.name, 1);
			}

			if (base.has_field.has_field (2)) {
				base.serialize.write_integer (this.count, 2);
			}

			return base.serialize.close ();
		}
	}


	public class tmonster : SprotoTypeBase {
		private static int max_field_count = 9;
		
		
		private Int64 _id; // tag 0
		public Int64 id {
			get { return _id; }
			set { base.has_field.set_field (0, true); _id = value; }
		}

		private string _name; // tag 1
		public string name {
			get { return _name; }
			set { base.has_field.set_field (1, true); _name = value; }
		}

		private Int64 _level; // tag 2
		public Int64 level {
			get { return _level; }
			set { base.has_field.set_field (2, true); _level = value; }
		}

		private Int64 _hp; // tag 3
		public Int64 hp {
			get { return _hp; }
			set { base.has_field.set_field (3, true); _hp = value; }
		}

		private Int64 _mp; // tag 4
		public Int64 mp {
			get { return _mp; }
			set { base.has_field.set_field (4, true); _mp = value; }
		}

		public tmonster () : base(max_field_count) {}

		public tmonster (byte[] buffer) : base(max_field_count, buffer) {
			this.decode ();
		}

		protected override void decode () {
			int tag = -1;
			while (-1 != (tag = base.deserialize.read_tag ())) {
				switch (tag) {
				case 0:
					this.id = base.deserialize.read_integer ();
					break;
				case 1:
					this.name = base.deserialize.read_string ();
					break;
				case 2:
					this.level = base.deserialize.read_integer ();
					break;
				case 3:
					this.hp = base.deserialize.read_integer ();
					break;
				case 4:
					this.mp = base.deserialize.read_integer ();
					break;
				default:
					base.deserialize.read_unknow_data ();
					break;
				}
			}
		}

		public override int encode (SprotoStream stream) {
			base.serialize.open (stream);

			if (base.has_field.has_field (0)) {
				base.serialize.write_integer (this.id, 0);
			}

			if (base.has_field.has_field (1)) {
				base.serialize.write_string (this.name, 1);
			}

			if (base.has_field.has_field (2)) {
				base.serialize.write_integer (this.level, 2);
			}

			if (base.has_field.has_field (3)) {
				base.serialize.write_integer (this.hp, 3);
			}

			if (base.has_field.has_field (4)) {
				base.serialize.write_integer (this.mp, 4);
			}

			return base.serialize.close ();
		}
	}


	public class tplayer : SprotoTypeBase {
		private static int max_field_count = 35;
		
		
		private Int64 _id; // tag 0
		public Int64 id {
			get { return _id; }
			set { base.has_field.set_field (0, true); _id = value; }
		}

		private string _name; // tag 1
		public string name {
			get { return _name; }
			set { base.has_field.set_field (1, true); _name = value; }
		}

		private Int64 _job; // tag 2
		public Int64 job {
			get { return _job; }
			set { base.has_field.set_field (2, true); _job = value; }
		}

		private Int64 _level; // tag 3
		public Int64 level {
			get { return _level; }
			set { base.has_field.set_field (3, true); _level = value; }
		}

		private Int64 _currentexperience; // tag 4
		public Int64 currentexperience {
			get { return _currentexperience; }
			set { base.has_field.set_field (4, true); _currentexperience = value; }
		}

		private Int64 _nextexperience; // tag 5
		public Int64 nextexperience {
			get { return _nextexperience; }
			set { base.has_field.set_field (5, true); _nextexperience = value; }
		}

		private Int64 _hp; // tag 6
		public Int64 hp {
			get { return _hp; }
			set { base.has_field.set_field (6, true); _hp = value; }
		}

		private Int64 _mp; // tag 7
		public Int64 mp {
			get { return _mp; }
			set { base.has_field.set_field (7, true); _mp = value; }
		}

		private Int64 _hprate; // tag 8
		public Int64 hprate {
			get { return _hprate; }
			set { base.has_field.set_field (8, true); _hprate = value; }
		}

		private Int64 _mprate; // tag 9
		public Int64 mprate {
			get { return _mprate; }
			set { base.has_field.set_field (9, true); _mprate = value; }
		}

		private Int64 _criticaldamage; // tag 10
		public Int64 criticaldamage {
			get { return _criticaldamage; }
			set { base.has_field.set_field (10, true); _criticaldamage = value; }
		}

		private Int64 _criticalrate; // tag 11
		public Int64 criticalrate {
			get { return _criticalrate; }
			set { base.has_field.set_field (11, true); _criticalrate = value; }
		}

		private Int64 _physicaldamage; // tag 12
		public Int64 physicaldamage {
			get { return _physicaldamage; }
			set { base.has_field.set_field (12, true); _physicaldamage = value; }
		}

		private Int64 _spelldamage; // tag 13
		public Int64 spelldamage {
			get { return _spelldamage; }
			set { base.has_field.set_field (13, true); _spelldamage = value; }
		}

		private Int64 _attactspeed; // tag 14
		public Int64 attactspeed {
			get { return _attactspeed; }
			set { base.has_field.set_field (14, true); _attactspeed = value; }
		}

		private Int64 _magicalresistance; // tag 15
		public Int64 magicalresistance {
			get { return _magicalresistance; }
			set { base.has_field.set_field (15, true); _magicalresistance = value; }
		}

		private Int64 _armor; // tag 16
		public Int64 armor {
			get { return _armor; }
			set { base.has_field.set_field (16, true); _armor = value; }
		}

		private Int64 _fightrate; // tag 17
		public Int64 fightrate {
			get { return _fightrate; }
			set { base.has_field.set_field (17, true); _fightrate = value; }
		}

		public tplayer () : base(max_field_count) {}

		public tplayer (byte[] buffer) : base(max_field_count, buffer) {
			this.decode ();
		}

		protected override void decode () {
			int tag = -1;
			while (-1 != (tag = base.deserialize.read_tag ())) {
				switch (tag) {
				case 0:
					this.id = base.deserialize.read_integer ();
					break;
				case 1:
					this.name = base.deserialize.read_string ();
					break;
				case 2:
					this.job = base.deserialize.read_integer ();
					break;
				case 3:
					this.level = base.deserialize.read_integer ();
					break;
				case 4:
					this.currentexperience = base.deserialize.read_integer ();
					break;
				case 5:
					this.nextexperience = base.deserialize.read_integer ();
					break;
				case 6:
					this.hp = base.deserialize.read_integer ();
					break;
				case 7:
					this.mp = base.deserialize.read_integer ();
					break;
				case 8:
					this.hprate = base.deserialize.read_integer ();
					break;
				case 9:
					this.mprate = base.deserialize.read_integer ();
					break;
				case 10:
					this.criticaldamage = base.deserialize.read_integer ();
					break;
				case 11:
					this.criticalrate = base.deserialize.read_integer ();
					break;
				case 12:
					this.physicaldamage = base.deserialize.read_integer ();
					break;
				case 13:
					this.spelldamage = base.deserialize.read_integer ();
					break;
				case 14:
					this.attactspeed = base.deserialize.read_integer ();
					break;
				case 15:
					this.magicalresistance = base.deserialize.read_integer ();
					break;
				case 16:
					this.armor = base.deserialize.read_integer ();
					break;
				case 17:
					this.fightrate = base.deserialize.read_integer ();
					break;
				default:
					base.deserialize.read_unknow_data ();
					break;
				}
			}
		}

		public override int encode (SprotoStream stream) {
			base.serialize.open (stream);

			if (base.has_field.has_field (0)) {
				base.serialize.write_integer (this.id, 0);
			}

			if (base.has_field.has_field (1)) {
				base.serialize.write_string (this.name, 1);
			}

			if (base.has_field.has_field (2)) {
				base.serialize.write_integer (this.job, 2);
			}

			if (base.has_field.has_field (3)) {
				base.serialize.write_integer (this.level, 3);
			}

			if (base.has_field.has_field (4)) {
				base.serialize.write_integer (this.currentexperience, 4);
			}

			if (base.has_field.has_field (5)) {
				base.serialize.write_integer (this.nextexperience, 5);
			}

			if (base.has_field.has_field (6)) {
				base.serialize.write_integer (this.hp, 6);
			}

			if (base.has_field.has_field (7)) {
				base.serialize.write_integer (this.mp, 7);
			}

			if (base.has_field.has_field (8)) {
				base.serialize.write_integer (this.hprate, 8);
			}

			if (base.has_field.has_field (9)) {
				base.serialize.write_integer (this.mprate, 9);
			}

			if (base.has_field.has_field (10)) {
				base.serialize.write_integer (this.criticaldamage, 10);
			}

			if (base.has_field.has_field (11)) {
				base.serialize.write_integer (this.criticalrate, 11);
			}

			if (base.has_field.has_field (12)) {
				base.serialize.write_integer (this.physicaldamage, 12);
			}

			if (base.has_field.has_field (13)) {
				base.serialize.write_integer (this.spelldamage, 13);
			}

			if (base.has_field.has_field (14)) {
				base.serialize.write_integer (this.attactspeed, 14);
			}

			if (base.has_field.has_field (15)) {
				base.serialize.write_integer (this.magicalresistance, 15);
			}

			if (base.has_field.has_field (16)) {
				base.serialize.write_integer (this.armor, 16);
			}

			if (base.has_field.has_field (17)) {
				base.serialize.write_integer (this.fightrate, 17);
			}

			return base.serialize.close ();
		}
	}


}


namespace protoProtocol{ 
	public class changescene : SprotoProtocolBase {
		public const int tag = 5;
		public override int GetTag() {
			return tag;
		}

		public protoType.changescene.request request;
		public protoType.changescene.response response;


		static changescene () {
			ProtocolFunctionDictionary.SetRequest<protoType.changescene.request> (tag);
			ProtocolFunctionDictionary.SetResponse<protoType.changescene.response> (tag);
		}


		public override SprotoTypeBase GetRequest() {
			return this.request;
		}

		public override SprotoTypeBase GetResponse() {
			return this.response;
		}
	}

	public class createaccount : SprotoProtocolBase {
		public const int tag = 2;
		public override int GetTag() {
			return tag;
		}

		public protoType.createaccount.request request;
		public protoType.createaccount.response response;


		static createaccount () {
			ProtocolFunctionDictionary.SetRequest<protoType.createaccount.request> (tag);
			ProtocolFunctionDictionary.SetResponse<protoType.createaccount.response> (tag);
		}


		public override SprotoTypeBase GetRequest() {
			return this.request;
		}

		public override SprotoTypeBase GetResponse() {
			return this.response;
		}
	}

	public class createplayer : SprotoProtocolBase {
		public const int tag = 3;
		public override int GetTag() {
			return tag;
		}

		public protoType.createplayer.request request;
		public protoType.createplayer.response response;


		static createplayer () {
			ProtocolFunctionDictionary.SetRequest<protoType.createplayer.request> (tag);
			ProtocolFunctionDictionary.SetResponse<protoType.createplayer.response> (tag);
		}


		public override SprotoTypeBase GetRequest() {
			return this.request;
		}

		public override SprotoTypeBase GetResponse() {
			return this.response;
		}
	}

	public class drop : SprotoProtocolBase {
		public const int tag = 2;
		public override int GetTag() {
			return tag;
		}

		public protoType.drop.request request;


		static drop () {
			ProtocolFunctionDictionary.SetRequest<protoType.drop.request> (tag);
		}


		public override SprotoTypeBase GetRequest() {
			return this.request;
		}

		public override SprotoTypeBase GetResponse() {
			return null;
		}
	}

	public class getfightround : SprotoProtocolBase {
		public const int tag = 6;
		public override int GetTag() {
			return tag;
		}

		public protoType.getfightround.request request;
		public protoType.getfightround.response response;


		static getfightround () {
			ProtocolFunctionDictionary.SetRequest<protoType.getfightround.request> (tag);
			ProtocolFunctionDictionary.SetResponse<protoType.getfightround.response> (tag);
		}


		public override SprotoTypeBase GetRequest() {
			return this.request;
		}

		public override SprotoTypeBase GetResponse() {
			return this.response;
		}
	}

	public class getplayerinfo : SprotoProtocolBase {
		public const int tag = 4;
		public override int GetTag() {
			return tag;
		}

		public protoType.getplayerinfo.request request;
		public protoType.getplayerinfo.response response;


		static getplayerinfo () {
			ProtocolFunctionDictionary.SetRequest<protoType.getplayerinfo.request> (tag);
			ProtocolFunctionDictionary.SetResponse<protoType.getplayerinfo.response> (tag);
		}


		public override SprotoTypeBase GetRequest() {
			return this.request;
		}

		public override SprotoTypeBase GetResponse() {
			return this.response;
		}
	}

	public class login : SprotoProtocolBase {
		public const int tag = 1;
		public override int GetTag() {
			return tag;
		}

		public protoType.login.request request;
		public protoType.login.response response;


		static login () {
			ProtocolFunctionDictionary.SetRequest<protoType.login.request> (tag);
			ProtocolFunctionDictionary.SetResponse<protoType.login.response> (tag);
		}


		public override SprotoTypeBase GetRequest() {
			return this.request;
		}

		public override SprotoTypeBase GetResponse() {
			return this.response;
		}
	}

	public class sysmessage : SprotoProtocolBase {
		public const int tag = 1;
		public override int GetTag() {
			return tag;
		}

		public protoType.sysmessage.request request;


		static sysmessage () {
			ProtocolFunctionDictionary.SetRequest<protoType.sysmessage.request> (tag);
		}


		public override SprotoTypeBase GetRequest() {
			return this.request;
		}

		public override SprotoTypeBase GetResponse() {
			return null;
		}
	}

}

